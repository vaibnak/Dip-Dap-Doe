{"id":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","dependencies":[{"name":"/home/vaibhav/Blockchain/Dip-Dap-Doe/web/package.json","includedInParent":true,"mtime":1546450983653},{"name":"/home/vaibhav/Blockchain/Dip-Dap-Doe/web/node_modules/web3-eth-accounts/node_modules/eth-lib/package.json","includedInParent":true,"mtime":1546080005925}],"generated":{"js":"// The RLP format\n// Serialization and deserialization for the BytesTree type, under the following grammar:\n// | First byte | Meaning                                                                    |\n// | ---------- | -------------------------------------------------------------------------- |\n// | 0   to 127 | HEX(leaf)                                                                  |\n// | 128 to 183 | HEX(length_of_leaf + 128) + HEX(leaf)                                      |\n// | 184 to 191 | HEX(length_of_length_of_leaf + 128 + 55) + HEX(length_of_leaf) + HEX(leaf) |\n// | 192 to 247 | HEX(length_of_node + 192) + HEX(node)                                      |\n// | 248 to 255 | HEX(length_of_length_of_node + 128 + 55) + HEX(length_of_node) + HEX(node) |\n\nvar encode = function encode(tree) {\n  var padEven = function padEven(str) {\n    return str.length % 2 === 0 ? str : \"0\" + str;\n  };\n\n  var uint = function uint(num) {\n    return padEven(num.toString(16));\n  };\n\n  var length = function length(len, add) {\n    return len < 56 ? uint(add + len) : uint(add + uint(len).length / 2 + 55) + uint(len);\n  };\n\n  var dataTree = function dataTree(tree) {\n    if (typeof tree === \"string\") {\n      var hex = tree.slice(2);\n      var pre = hex.length != 2 || hex >= \"80\" ? length(hex.length / 2, 128) : \"\";\n      return pre + hex;\n    } else {\n      var _hex = tree.map(dataTree).join(\"\");\n      var _pre = length(_hex.length / 2, 192);\n      return _pre + _hex;\n    }\n  };\n\n  return \"0x\" + dataTree(tree);\n};\n\nvar decode = function decode(hex) {\n  var i = 2;\n\n  var parseTree = function parseTree() {\n    if (i >= hex.length) throw \"\";\n    var head = hex.slice(i, i + 2);\n    return head < \"80\" ? (i += 2, \"0x\" + head) : head < \"c0\" ? parseHex() : parseList();\n  };\n\n  var parseLength = function parseLength() {\n    var len = parseInt(hex.slice(i, i += 2), 16) % 64;\n    return len < 56 ? len : parseInt(hex.slice(i, i += (len - 55) * 2), 16);\n  };\n\n  var parseHex = function parseHex() {\n    var len = parseLength();\n    return \"0x\" + hex.slice(i, i += len * 2);\n  };\n\n  var parseList = function parseList() {\n    var lim = parseLength() * 2 + i;\n    var list = [];\n    while (i < lim) {\n      list.push(parseTree());\n    }return list;\n  };\n\n  try {\n    return parseTree();\n  } catch (e) {\n    return [];\n  }\n};\n\nmodule.exports = { encode: encode, decode: decode };","map":{"mappings":[{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"../node_modules/web3-eth-accounts/node_modules/eth-lib/lib/rlp.js":"// The RLP format\n// Serialization and deserialization for the BytesTree type, under the following grammar:\n// | First byte | Meaning                                                                    |\n// | ---------- | -------------------------------------------------------------------------- |\n// | 0   to 127 | HEX(leaf)                                                                  |\n// | 128 to 183 | HEX(length_of_leaf + 128) + HEX(leaf)                                      |\n// | 184 to 191 | HEX(length_of_length_of_leaf + 128 + 55) + HEX(length_of_leaf) + HEX(leaf) |\n// | 192 to 247 | HEX(length_of_node + 192) + HEX(node)                                      |\n// | 248 to 255 | HEX(length_of_length_of_node + 128 + 55) + HEX(length_of_node) + HEX(node) |\n\nvar encode = function encode(tree) {\n  var padEven = function padEven(str) {\n    return str.length % 2 === 0 ? str : \"0\" + str;\n  };\n\n  var uint = function uint(num) {\n    return padEven(num.toString(16));\n  };\n\n  var length = function length(len, add) {\n    return len < 56 ? uint(add + len) : uint(add + uint(len).length / 2 + 55) + uint(len);\n  };\n\n  var dataTree = function dataTree(tree) {\n    if (typeof tree === \"string\") {\n      var hex = tree.slice(2);\n      var pre = hex.length != 2 || hex >= \"80\" ? length(hex.length / 2, 128) : \"\";\n      return pre + hex;\n    } else {\n      var _hex = tree.map(dataTree).join(\"\");\n      var _pre = length(_hex.length / 2, 192);\n      return _pre + _hex;\n    }\n  };\n\n  return \"0x\" + dataTree(tree);\n};\n\nvar decode = function decode(hex) {\n  var i = 2;\n\n  var parseTree = function parseTree() {\n    if (i >= hex.length) throw \"\";\n    var head = hex.slice(i, i + 2);\n    return head < \"80\" ? (i += 2, \"0x\" + head) : head < \"c0\" ? parseHex() : parseList();\n  };\n\n  var parseLength = function parseLength() {\n    var len = parseInt(hex.slice(i, i += 2), 16) % 64;\n    return len < 56 ? len : parseInt(hex.slice(i, i += (len - 55) * 2), 16);\n  };\n\n  var parseHex = function parseHex() {\n    var len = parseLength();\n    return \"0x\" + hex.slice(i, i += len * 2);\n  };\n\n  var parseList = function parseList() {\n    var lim = parseLength() * 2 + i;\n    var list = [];\n    while (i < lim) {\n      list.push(parseTree());\n    }return list;\n  };\n\n  try {\n    return parseTree();\n  } catch (e) {\n    return [];\n  }\n};\n\nmodule.exports = { encode: encode, decode: decode };"},"lineCount":73}},"hash":"9782d0d84bacd87c99613506511be083","cacheData":{"env":{}}}