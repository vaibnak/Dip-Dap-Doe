{"id":"../node_modules/ethers/utils/rlp.js","dependencies":[{"name":"/home/vaibhav/Blockchain/Dip-Dap-Doe/web/package.json","includedInParent":true,"mtime":1546513625694},{"name":"/home/vaibhav/Blockchain/Dip-Dap-Doe/web/node_modules/ethers/package.json","includedInParent":true,"mtime":1546080006090},{"name":"./bytes","loc":{"line":4,"column":22},"parent":"/home/vaibhav/Blockchain/Dip-Dap-Doe/web/node_modules/ethers/utils/rlp.js","resolved":"/home/vaibhav/Blockchain/Dip-Dap-Doe/web/node_modules/ethers/utils/bytes.js"}],"generated":{"js":"\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bytes_1 = require(\"./bytes\");\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        var length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error('invalid rlp');\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error('invalid rlp data');\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('too short');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('to short');\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invlaid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: bytes_1.hexlify(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = bytes_1.arrayify(data);\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error('invalid rlp data');\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n","map":{"mappings":[{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ethers/utils/rlp.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}}],"sources":{"../node_modules/ethers/utils/rlp.js":"\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bytes_1 = require(\"./bytes\");\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        var length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error('invalid rlp');\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error('invalid rlp data');\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('too short');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('to short');\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invlaid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: bytes_1.hexlify(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = bytes_1.arrayify(data);\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error('invalid rlp data');\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n"},"lineCount":117}},"hash":"b8ad738c3707d1883fd8b2fcf1139e48","cacheData":{"env":{}}}